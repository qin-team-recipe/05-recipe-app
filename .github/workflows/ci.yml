name: CI

on:
  push:
    branches:
      - 'feat*'
  pull_request:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.16.0]
        npm-version: [9.5.1]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: backend
          push: false
          tags: user/app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Docker compose up
        run: docker-compose -f backend/docker-compose.yml up -d

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install npm ${{ matrix.npm-version }}
        run: npm install -g npm@${{ matrix.npm-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci -w backend

      - name: Run DB migration
        run: npm run migrate -w backend

      - name: Run ESLint
        run: npm run lint -w backend

      - name: Run tests
        run: npm test -w backend

  frontend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.16.0]
        npm-version: [9.5.1]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install npm ${{ matrix.npm-version }}
        run: npm install -g npm@${{ matrix.npm-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci -w frontend

      - name: Run ESLint
        run: npm run lint -w frontend

      - name: Run tests
        run: npm test -w frontend
